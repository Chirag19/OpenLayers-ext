<!DOCTYPE html>
<!----------------------------------------------------------
 
	Copyright (c) 2013 Jean-Marc VIGLINO, 
	released under the CeCILL license (http://www.cecill.info/).
	
------------------------------------------------------------>
<html>
<head>
	<title>OpenLayers Control/SelectCluster</title>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

	<link rel="stylesheet" href="http://dev.openlayers.org/releases/OpenLayers-2.13.1/theme/default/style.css" />
	<script type="text/javascript" src="http://dev.openlayers.org/releases/OpenLayers-2.13.1/OpenLayers.debug.js"></script>
	<!--
	<link rel="stylesheet" href="../../openlayers/lib/theme/default/style.css" type="text/css">
	<script src="../../openlayers/lib/OpenLayers.js"></script>
	-->

	<script type="text/javascript" src="../Layer/Cluster.js"></script>
	<script type="text/javascript" src="../Control/SelectCluster.js"></script>
	<script type="text/javascript" src="http://acuriousanimal.com/code/animatedCluster/AnimatedCluster.js"></script>
	
	<script type="text/javascript">
	var map, clayer, ctrl; 
	function initMap()
	{	// Nouvelle carte
		map = new OpenLayers.Map("map");

		// OSM
		map.addLayer ( new OpenLayers.Layer.OSM() );
		
		// Ajouter un controle pour les couches
		map.addControl(new OpenLayers.Control.LayerSwitcher());

		// Centrer la carte
		var WGS84 = new OpenLayers.Projection('EPSG:4326');
		map.setCenter(new OpenLayers.LonLat(2.424, 48.845).transform(WGS84, map.getProjectionObject()), 13);

		// Cluster layer's style
		var style = new OpenLayers.Style
		({	pointRadius: 12,
			externalGraphic: "img/pins.png",
			backgroundGraphic: "img/pinsback.png",
			graphicYOffset:-24,
			backgroundXOffset: 0,
			backgroundYOffset: -16,
			graphicZIndex: 11,
			backgroundGraphicZIndex: 10,
			fillColor: "${fcolor}", //"#F0C20C",
			fillOpacity: 1,
			strokeColor: "#333",
			strokeWidth: 2,
			strokeOpacity: 1,
			labelSelect: false,
			//label: "${label}",
			//labelYOffset: "${labelOffset}",
			fontFamily: '"Luxi sans","Lucida Grande",Lucida,"Lucida Sans Unicode",sans-serif',
			fontSize: "${fSize}",
			fontWeight : "bold",
			cursor:"pointer"
		},
		{	context:
			{	label: function(f) 
				{	if (f.cluster) return f.cluster.length ? f.cluster[0].attributes.n : "";
					return f.attributes.n;
				},
				labelOffset: function(f) 
				{	return (f.cluster && f.cluster.length>1) ? "" : -8;
				},
				fSize: function(f) 
				{	return (f.cluster && f.cluster.length>1) ? 12 : 8;
				},
				fcolor: function(f)
				{	if (!f.cluster) return "#F0C20C";
					if (f.cluster.length<8) return "#AF7";
					if (f.cluster.length<16) return "#FD5";
					return "#F97";
				}
			}
		});
		// New cluster Layer
		clayer = new OpenLayers.Layer.Cluster ("Clusters", 
				{	rendererOptions: {yOrdering: true},
					styleMap: new OpenLayers.StyleMap
					({	"default": style,
						"select": {	pointRadius: 18 }
					})
				});

		// Add 200 features to cluster
		var b = map.calculateBounds();
		var features = new Array();
		for (var i = 0; i < 200; i++) 
		{	var r1 = Math.random();
			var r2 = Math.random();
			var px = b.left + (b.right-b.left) *r1 ; 
			var py = b.bottom + (b.top-b.bottom) *r2 ; 
			var f = new OpenLayers.Feature.Vector( new OpenLayers.Geometry.Point(px, py), {n:i} );
			features.push(f);
		}
		map.addLayer(clayer);
		clayer.addFeatures(features);

		// Select control
		ctrl = new OpenLayers.Control.SelectCluster (clayer, 
				{	hover:false, 
					pointRadius:12,
					animate:true, 
					connect:false,
					onSelect: function(feature) 
					{	if (feature.cluster) feature = feature.cluster[0];
						showStatus("selected feature "+feature.attributes.n+" ("+feature.id+")");
					},
					onUnselect: function(feature) 
					{	showStatus("");
					},
				});
		map.addControl (ctrl);
		ctrl.activate();
		
	}

	function showStatus(text) 
	{	document.getElementById("status").innerHTML = text;            
	}
	</script>
	<style>
		body { font:1em Helvetica,Arial,sans-serif; }
		h1 { color:#369; margin:0.5em 0 0.2em }
		#tags { color:#69F; font-size:0.9em; }
		p { margin: 0.5em 0; }
		p.title { color:#369; font-weight:bold; }
		#map { background:#fff; float:left; }
		#options { margin:0.5em; float:left; }
		#options p { margin:0 0 1em; }
		#docs { background:#e3e6e9; padding:0.5em; margin:0.5em 0; }
		.olControlAttribution
		{	bottom:0;
			background:rgba(255,255,255,0.6);
			padding: 0 0.5em;
		}
		#status { display:block; clear:both; }
	</style>

</head>
<body onload="initMap()">

	<a href="https://github.com/Viglino/OpenLayers-ext"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png"></a>

	<h1>OpenLayers Control.SelectCluster</h1>
	<div id="tags"> cluster, select, control, animation </div>
	<p class="info">A vector layer with cluster stragegy and styling and a select control to select features.
		<br />
		When selected, the clusters animate and spread to show the clustered features.
	</p>

	<!-- DIV pour la carte -->
	<div id="map" style="width:600px; height:400px;"></div>

	<p id="status">
	</p>

</body>
</html>